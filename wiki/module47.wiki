<hr/>

|| *Content* || Why Free Software and Open Standard are important   ||
|| *Team* || J T Dsouza  ||
|| *Discussion Page* || [http://groups.google.com/group/cbse065/browse_thread/thread/6ab3a824f2ed8a75] ||


<hr/>

<wiki:toc max_depth="3" />


= Introduction =

This Appendix provides an introduction to free software and Free and Open Standards.

*What is FLOSS* 

The acronym FLOSS refers to Free, Libre and Open Source Software. The term covers a vast panoply of software developed in an open and collaborative environment by software pros, scientific organisations, defence and space organisations, software and hardware companies, and individuals from every imaginable skill and profession. Such software is also known as Free software or Open Source software. Subtle philosophical differences exist between proponents of the term Open source and the proponents of the term Free software. Also the term Free tends to be confused as meaning gratis (free of costs) instead of it's intended meaning of freedom. Hence the term FLOSS or FOSS is finding increasing use.

*History and Philosophy*

The free software movement can trace it's roots to the MIT Artificial Intelligence Laboratory of the 60s and 70s. In the period 1950-1970 software was produced in a collaborative manner and distributed with few if any restrictions. However as computer usage grew, the early business model of bundled software and hardware started unraveling and an independent software industry started taking root. Along with this change many restrictions began to find their way into licences. These restrictions prevented distribution and reuse of code.

One prominent MIT hacker Richard M. Stallman found these restrictions abhorrent and announced the GNU Project in 1983. The goal of this project was to develop a Unix like operating system free of these restrictions. The acronym GNU stands for GNU is Not UNIX, which aptly describes it's independent code base. Development of the GNU Operating System began in January 1984. Shortly after, in 1985  the Free Software Foundation (FSF) was formed. The definition of free software and the GNU licence (GPL V1) were authored by Richard M. Stallman and Eben Moglen at this time and released by the FSF.

The Philopsphy underlying free software is to permit automatic, equal and immutable right to use, copy, modify and distribute software, to all recipients of such software. In principle it provides the tools, knowledge and resources for anyone to contribute ideas, code, documentation and feedback. 
This caused (and continues to cause) an explosion of creativity and contributions, resulting in rapid development. A number of free licences in addition to the GPL like Apache, BSD, LGPL, AGPL. FDL, Mozilla etc, alongwith their projects and code came into widespread use.

Well known free software projects include the Linux kernel, Firefox, Apache web server, Wikipedia, Java, Gnome, Bittorrent, KDE, GCC, X.org, VLC, BSD, Clamav etc.

*Why is Free Software Important*

Software forms a cornerstone of the knowledge economy. Software acts as an exponential multiplier of existing capacities in society. It provide the means to distribute services and information without expensive infrastructure. This is vital for a developing country like India. However software is extremely expensive and thus prevents such leveraging. 

The Free software system changes the software development, distribution, maintenance and usage paradigm by making the distribution of source code mandatory to the recipient. Since source code is  simultaneously a knowledge repository,  a raw material and a tool, making code available effectively achieves the following:

#1) Removes development barriers 
 * Free of cost development and debug tools
 * Reuse code since all code is available for reuse
 * Incorporates new ideas since anybody is welcome to contribute his ideas
 * Reduces cost of testing new ideas to near zero
#2) Reduce development costs  and Improve quality
 * By having a large number of developers, effectively distributing the load
 * Debugging by large number of users, since code is available for scrutiny by anyone
 * Debugging under diverse conditions
 * Excellent security as code is scrutinised for bugs
#3) Creates a knowledge society by sharing of ideas through code

#4) Provides software for users which is essentially free of cost

#5) Provides an extremely deep stack of applications covering every area of the software
 and computing infrastructure. Applications includes compilers, databases, languages,
 network and security tools, package management, code management, Ecad, CAD, Sound and
 Video, Graphic editing, Office suites, Maths and Scientific apps, etc. 

#6) Works on a wide spectrum of hardware architectures covering, ARM, Blackfin, cris, SH, Power, Sparc, I386, Sharc, TMS, Alpha parisc, TRON, Alpha, ARM, avr32, cris, ia64, m32r,   m68k, mn10300, powerpc, sh, sparc64, x86, s390, xtensa
This covers small embedded systems to petaflop speed super comps. Infact 49 of the top 50 supercomputers use GNU/Linux as the OS.


#8)Creates the infrastructure for Software-As-Service Industry, through opportunities for
 * Installation 
 * Maintanence
 * Customisation
 * Localization
 * Distribution

Infact the distributed and collaborative nature of FLOSS is being used in several other areas, like hardware development, Gene mapping etc. 

*What are Free and Open Standards*

A standard that is available free of costs and restrictions to anybody for implementation can be termed as free and open. 
A formal definition has been proposed to remove ambiguities, that may lead to confusion:

   1. *No Intentional Secrets:* The standard MUST NOT withhold any detail necessary for interoperable implementation. As flaws are inevitable, the standard MUST define a process for fixing flaws identified during implementation and interoperability testing and to incorporate said changes into a revised version or superseding version of the standard to be released under terms that do not violate the OSR.

   2. *Availability:* The standard MUST be freely and publicly available (e.g., from a stable web site) under royalty-free terms.

   3. *Patents:* All patents essential to implementation of the standard MUST:
          * be licensed under royalty-free terms for unrestricted use, or
          * be covered by a promise of non-assertion when practiced by open source software

   4. *No Agreements:* There MUST NOT be any requirement for execution of a license agreement, NDA, grant, click-through, or any other form of paperwork to deploy conforming implementations of the standard.

   5. *No Incompatible Dependencies:* Implementation of the standard MUST NOT require any other technology that fails to meet the criteria of this Requirement.
   